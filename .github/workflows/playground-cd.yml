name: CD - Code Hedgehog Playground

on:
  push:
    branches:
      - '**' # Trigger on all branches
    paths:
      - 'packages/playground/**'
      - '.github/workflows/playground-cd.yml'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      image_tag: ${{ steps.meta.outputs.version }}
      image_name: ghcr.io/growilabs/code-hedgehog
      
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/growilabs/code-hedgehog
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,format=short
            type=ref,event=branch
          labels: |
            org.opencontainers.image.title=Code Hedgehog Playground
            org.opencontainers.image.description=Code Hedgehog Playground Application
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./packages/playground
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # Kubernetesデプロイジョブ（テスト用：全ブランチで実行）
  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    # if: github.ref == 'refs/heads/main'  # ← この行をコメントアウト
    permissions:
      contents: read
    
    steps:
      - name: Show deployment info
        run: |
          echo "🔍 Branch: ${{ github.ref_name }}"
          echo "🔍 Commit SHA: ${{ github.sha }}"
          echo "🔍 Repository: ${{ github.repository }}"
          echo "🔍 Actor: ${{ github.actor }}"
          
      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        
      - name: Setup kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > $HOME/.kube/config
          chmod 600 $HOME/.kube/config
          
      - name: Test cluster connection
        run: |
          echo "🔍 Testing cluster connection..."
          kubectl cluster-info
          echo "✅ Cluster connection successful"
          
          echo "🔍 Checking namespaces..."
          kubectl get namespaces
          
          echo "🔍 Checking code-hedgehog namespace..."
          kubectl get ns code-hedgehog || echo "❌ Namespace code-hedgehog does not exist"
          
      - name: Check existing deployment
        run: |
          echo "🔍 Checking for existing deployment..."
          kubectl get deployment code-hedgehog-deployment -n code-hedgehog || {
            echo "❌ Deployment 'code-hedgehog-deployment' does not exist"
            echo "Available deployments in code-hedgehog namespace:"
            kubectl get deployments -n code-hedgehog || echo "No deployments found"
          }
          
      - name: Update deployment image (if deployment exists)
        run: |
          if kubectl get deployment code-hedgehog-deployment -n code-hedgehog >/dev/null 2>&1; then
            echo "✅ Deployment exists, updating image..."
            kubectl set image deployment/code-hedgehog-deployment \
              code-hedgehog-container=ghcr.io/growilabs/code-hedgehog:${{ github.sha }} \
              -n code-hedgehog
          else
            echo "⚠️ Deployment does not exist, skipping image update"
            echo "Please create the deployment first or check the deployment name"
          fi
            
      - name: Verify deployment (if deployment exists)
        run: |
          if kubectl get deployment code-hedgehog-deployment -n code-hedgehog >/dev/null 2>&1; then
            echo "⏳ Waiting for rollout to complete..."
            kubectl rollout status deployment/code-hedgehog-deployment \
              -n code-hedgehog --timeout=300s
          else
            echo "⚠️ Skipping rollout verification (deployment does not exist)"
          fi
            
      - name: Get deployment status
        if: always()
        run: |
          echo "🔍 Final deployment status..."
          kubectl get deployments -n code-hedgehog || echo "No deployments found"
          kubectl get pods -n code-hedgehog || echo "No pods found"
          
          if kubectl get deployment code-hedgehog-deployment -n code-hedgehog >/dev/null 2>&1; then
            kubectl describe deployment/code-hedgehog-deployment -n code-hedgehog
          fi